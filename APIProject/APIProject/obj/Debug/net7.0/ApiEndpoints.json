[
  {
    "ContainingType": "APIProject.Controllers.PatientController",
    "Method": "getAllPatientData",
    "RelativePath": "AllPatientRecord",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[APIProject.Models.Patient, APIProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.PatientController",
    "Method": "AddPatient",
    "RelativePath": "api/Patient",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "patientDto",
        "Type": "APIProject.Dtos.CreatePatientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PatientController",
    "Method": "UpdatePatientRecord",
    "RelativePath": "api/Patient",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIProject.Dtos.UpdatePatientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PatientController",
    "Method": "getPatientById",
    "RelativePath": "api/Patient/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIProject.Models.Patient",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.PatientController",
    "Method": "DeletePatient",
    "RelativePath": "api/Patient/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeController",
    "Method": "AddPractice",
    "RelativePath": "api/Practice",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIProject.Dtos.CreatePracticeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeController",
    "Method": "GetPracticeById",
    "RelativePath": "api/Practice/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIProject.Models.Practice",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeController",
    "Method": "DeletePractice",
    "RelativePath": "api/Practice/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeController",
    "Method": "GetAllPractices",
    "RelativePath": "api/Practice/AllPractices",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[APIProject.Models.Practice, APIProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeLocationController",
    "Method": "AddPracticeLocation",
    "RelativePath": "api/PracticeLocation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "practiceLocationDto",
        "Type": "APIProject.Dtos.CreatePracticeLocationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeLocationController",
    "Method": "UpdatePracticeLocation",
    "RelativePath": "api/PracticeLocation",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatePracticeLocationDto",
        "Type": "APIProject.Dtos.UpdatePracticeLocationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeLocationController",
    "Method": "GetPracticeLocationById",
    "RelativePath": "api/PracticeLocation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIProject.Models.PracticeLocation",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeLocationController",
    "Method": "DeletePracticeLocation",
    "RelativePath": "api/PracticeLocation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.PracticeLocationController",
    "Method": "GetAllPracticeLocations",
    "RelativePath": "api/PracticeLocation/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[APIProject.Models.PracticeLocation, APIProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.ProviderController",
    "Method": "AddProvider",
    "RelativePath": "api/Provider",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerDto",
        "Type": "APIProject.Dtos.CreateProviderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ProviderController",
    "Method": "UpdateProvider",
    "RelativePath": "api/Provider",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerDto",
        "Type": "APIProject.Dtos.UpdateProviderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ProviderController",
    "Method": "GetProviderById",
    "RelativePath": "api/Provider/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIProject.Models.Provider",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.ProviderController",
    "Method": "DeleteProvider",
    "RelativePath": "api/Provider/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ProviderController",
    "Method": "GetAllProviderRecords",
    "RelativePath": "api/Provider/AllProviderRecords",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[APIProject.Models.Provider, APIProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.ResourcesController",
    "Method": "AddResource",
    "RelativePath": "api/Resources",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIProject.Dtos.CreateResourceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ResourcesController",
    "Method": "DeleteResource",
    "RelativePath": "api/Resources/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ResourcesController",
    "Method": "GetAllResources",
    "RelativePath": "api/Resources/AllResources",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[APIProject.Models.Resource, APIProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.ScheduleController",
    "Method": "AddSchedule",
    "RelativePath": "api/Schedule",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "scheduleDto",
        "Type": "APIProject.Dtos.CreateProviderScheduleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ScheduleController",
    "Method": "UpdateSchedule",
    "RelativePath": "api/Schedule",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "scheduleDto",
        "Type": "APIProject.Dtos.UpdateProviderScheduleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ScheduleController",
    "Method": "GetScheduleById",
    "RelativePath": "api/Schedule/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIProject.Models.ProviderSchedule",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.ScheduleController",
    "Method": "DeleteSchedule",
    "RelativePath": "api/Schedule/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIProject.Controllers.ScheduleController",
    "Method": "GetAllSchedules",
    "RelativePath": "api/Schedule/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[APIProject.Models.ProviderSchedule, APIProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.AuthController",
    "Method": "loginUser",
    "RelativePath": "login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIProject.Dtos.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIProject.Controllers.AuthController",
    "Method": "SignUp",
    "RelativePath": "signUp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIProject.Dtos.SignUpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]